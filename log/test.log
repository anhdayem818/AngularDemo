  [1m[36m (757.5ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL) [0m
  [1m[35m (0.2ms)[0m  select sqlite_version(*)
  [1m[36m (722.4ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.2ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
Migrating to CreateScreencasts (20150707030742)
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35m (0.9ms)[0m  CREATE TABLE "screencasts" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar, "summary" text, "duration" varchar, "link" varchar, "published_at" datetime, "source" varchar, "video_url" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL) 
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20150707030742"]]
  [1m[35m (711.6ms)[0m  commit transaction
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mFixture Delete (0.4ms)[0m  [1mDELETE FROM "screencasts"[0m
  [1m[35mFixture Insert (0.2ms)[0m  INSERT INTO "screencasts" ("title", "summary", "duration", "link", "published_at", "source", "video_url", "created_at", "updated_at", "id") VALUES ('MyString', 'MyText', 'MyString', 'MyString', '2015-07-07 10:07:42.000000', 'MyString', 'MyString', '2015-07-07 03:29:14', '2015-07-07 03:29:14', 980190962)
  [1m[36mFixture Insert (0.1ms)[0m  [1mINSERT INTO "screencasts" ("title", "summary", "duration", "link", "published_at", "source", "video_url", "created_at", "updated_at", "id") VALUES ('MyString', 'MyText', 'MyString', 'MyString', '2015-07-07 10:07:42.000000', 'MyString', 'MyString', '2015-07-07 03:29:14', '2015-07-07 03:29:14', 298486374)[0m
  [1m[35mFixture Insert (0.1ms)[0m  INSERT INTO "screencasts" ("title", "summary", "duration", "link", "published_at", "source", "video_url", "created_at", "updated_at", "id") VALUES ('Fast Rails Commands', 'Rails commands, such as generators, migrations, and tests, have a tendency to be slow because they need to load the Rails app each time. Here I show three tools to make this faster: Zeus, Spring, and Commands.', '8:06', 'http://railscasts.com/episodes/412-fast-rails-commands', 'Thu, 04 Apr 2013 00:00:00 -0700', 'railscasts', 'http://media.railscasts.com/assets/episodes/videos/412-fast-rails-commands.mp4', '2015-07-07 03:29:14', '2015-07-07 03:29:14', 980496669)
  [1m[36mFixture Insert (0.1ms)[0m  [1mINSERT INTO "screencasts" ("title", "summary", "duration", "link", "published_at", "source", "video_url", "created_at", "updated_at", "id") VALUES ('Wizard Forms with Wicked', 'Creating a wizard form can be tricky in Rails. Learn how Wicked can help by turning a controller into a series of multiple steps.', '11:57', 'http://railscasts.com/episodes/346-wizard-forms-with-wicked', 'Thu, 03 May 2012 00:00:00 -0700', 'railscasts', 'http://media.railscasts.com/assets/episodes/videos/346-wizard-forms-with-wicked.mp4', '2015-07-07 03:29:14', '2015-07-07 03:29:14', 251792062)[0m
  [1m[35mFixture Insert (0.1ms)[0m  INSERT INTO "screencasts" ("title", "summary", "duration", "link", "published_at", "source", "video_url", "created_at", "updated_at", "id") VALUES ('Sending HTML Email', 'HTML email can be difficult to code because any CSS should be made inline. Here I present a few tools for doing this including the premailer-rails3 and roadie gems.', '5:42', 'http://railscasts.com/episodes/312-sending-html-email', 'Mon, 02 Jan 2012 00:00:00 -0800', 'railscasts', 'http://media.railscasts.com/assets/episodes/videos/312-sending-html-email.mp4', '2015-07-07 03:29:14', '2015-07-07 03:29:14', 74901944)
  [1m[36m (787.5ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
------------------------------------------------------------
ScreencastTest: test_should_be_valid_if_required_data_exists
------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mrollback transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
---------------------------------------------------------------
ScreencastTest: test_should_be_invalid_if_missing_required_data
---------------------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mrollback transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
-----------------------------------------------------------------------------
ScreencastTest: test_should_only_allow_one_screencast_with_the_same_video_url
-----------------------------------------------------------------------------
  [1m[36mScreencast Load (0.3ms)[0m  [1mSELECT  "screencasts".* FROM "screencasts" WHERE "screencasts"."id" = ? LIMIT 1[0m  [["id", 980496669]]
  [1m[35m (0.1ms)[0m  rollback transaction
